<?xml version="1.0" encoding="utf-8" ?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-4.2.xsd ">

    <!--取消对应请求路径的安全策略-->
    <http pattern="/js/**" security="none"/>
    <http pattern="/login.do" security="none"/>
    <http pattern="/login/fail.do" security="none"/>
    <http pattern="/register.do" security="none"/>
    <http pattern="/logout.do" security="none"/>

    <!--
    auto-config:表示引入SpringSecurity相关的过滤器
    use-expressions:是否使用SpEl表达式 即如果为true则写hasRole
    -->
    <http auto-config="true" use-expressions="true">
        <!--所有带admin的请求都需要ROLE_ADMIN权限-->
        <intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"/>
        <!--自定义登录页面配置
        login-page：登录页面
        default-target-url：登录成功跳转页面
        authentication-failure-url:登录失败跳转地址
        always-use-default-target:是否使用每次登录成功的路径 即成功首页
        password-parameter="":自定义表单的name
         username-parameter="" -->
        <form-login login-page="/login.do"
                          default-target-url="/admin/user/list.do"
                          authentication-failure-url="/login/fail.do"
                          always-use-default-target="true"/>


        <!--登出配置-->
        <logout logout-success-url="/login"/>

        <!--关闭CSRF攻击功能-->
        <csrf disabled="true"/>

    </http>

    <!--授权认证管理器-->
    <authentication-manager>

        <authentication-provider user-service-ref="userDetailServiceImpl">

            <!--引用加密对象-->
            <password-encoder hash="md5" base64="false"/>

            <!--第一种，基于硬编码方式 登录账户配置-->
           <!-- <beans:user-service>
                &lt;!&ndash;authorities :权限要和拦截的地方配置的权限一致，disabled账户是否禁用&ndash;&gt;
                <beans:user name="admin" password="123456" authorities="ROLE_ADMIN" disabled="false"/>
            </beans:user-service>-->


            <!--第二种，数据源的方式
                select password from users where username=?
                如果登录密码等于数据库查出来的密码，则登录成功
            -->
            <!--(1) 去数据库校验-->
           <!-- <beans:jdbc-user-service data-source-ref="dataSource" users-by-username-query="SELECT passwordNo FROM SYS_user_userAccount WHERE accountNo=?" />-->



            <!--第三种自定义校验器校验 在上边authentication-provider 标签中配置user-service-ref属性 -->


        </authentication-provider>
    </authentication-manager>

    <!--加密工具-->
<!--    <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="0"/>
    </beans:bean>-->

    <beans:bean  id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <beans:property name="url" value="jdbc:mysql://192.168.186.11:3306/SkyChen?characterEncoding=UTF-8"/>
        <beans:property name="username" value="root"/>
        <beans:property name="password" value="SkyChen123456"/>
        <beans:property name="maxActive" value="10"/>
        <beans:property name="minIdle" value="5"/>
    </beans:bean>


    <!--自定义校验器-->
    <beans:bean id="userDetailServiceImpl" class="com.clement.service.UserDetailServiceImpl"/>
</beans:beans>